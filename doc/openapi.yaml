---
openapi: 3.0.3
info:
  title: Stein
  description: hey check out this cool rock i found
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 500
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8000/api
security:
  - bearerAuth: []
paths:
  "/profile":
    get:
      tags:
        - Profile
      summary: Get a profile for the given username
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  profile_picture_url:
                    description: The url of the user's profile picture, may be null
                    type: string
                  admin:
                    type: boolean
                  banned:
                    type: boolean
                  team:
                    type: number
                    description: The team id the user is in
        "404":
          description: Not Found
  "/profile/posts":
    get:
      tags:
        - Profile
      summary: Get a profile's post history
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: page
          description: Starting at 0
          in: query
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    author:
                      type: string
                    images:
                      description: The quality levels available for the post's images and their urls
                      type: array
                      items:
                        type: object
                        properties:
                          quality_level:
                            type: number
                          url:
                            type: string
                    location_lat:
                      type: number
                    location_lon:
                      type: number
                    rating:
                      type: number
        "404":
          description: Not Found
  "/posts":
    get:
      summary: Get the user's recommended posts (location-based)
      parameters:
        - name: page
          in: query
          description: Starting at 0
          schema:
            type: number
        - name: location_lat
          in: query
          schema:
            type: number
        - name: location_lon
          in: query
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    author:
                      type: string
                    images:
                      description: The quality levels available for the post's images and their urls
                      type: array
                      items:
                        type: object
                        properties:
                          quality_level:
                            type: number
                          height:
                            type: number
                          width:
                            type: number
                          url:
                            type: string
                    location_lat:
                      type: number
                    location_lon:
                      type: number
                    distance:
                      type: number
                      description: Distance from the request lat/lon in meters
                    rating:
                      type: number
  "/post":
    post:
      tags:
        - Post
      summary: Submit a post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location_lat:
                  type: number
                location_lon:
                  type: number
                image:
                  type: string
                  description: A base64 encoded image
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
    delete:
      tags:
        - Post
      summary: Delete a post
      parameters:
        - name: id
          in: query
          description: Post id
          schema:
            type: number
      responses:
        "200":
          description: Post deleted
        "401":
          description: Not your post / not an admin
        "404":
          description: Post not found
    get:
      tags:
        - Post
      summary: Get a post by id
      parameters:
        - name: id
          in: query
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  author:
                    type: string
                  images:
                    description: The quality levels available for the post's images and their urls
                    type: array
                    items:
                      type: object
                      properties:
                        quality_level:
                          type: number
                        height:
                          type: number
                        width:
                          type: number
                        url:
                          type: string
                  location_lat:
                    type: number
                  location_lon:
                    type: number
                  rating:
                    type: number
        "404":
          description: Not Found
  "/post/comments":
    get:
      tags:
        - Post
        - Comments
      summary: Get a post's comments
      parameters:
        - name: id
          in: query
          description: Post id
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      description: The comment's id (0 = post author's comment)
                    author:
                      type: string
                      description: The author's username
                    comment:
                      type: string
                      description: The comment's 3 emojis
                    distance:
                      type: number
                      description: The comment's distance from the post in meters
                    rating:
                      type: number
                      description: The comment's rating from 1-5 stars
        "404":
          description: Post not found
    post:
      tags:
        - Comments
      summary: Post a comment
      parameters:
        - name: id
          in: query
          description: Post id
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                location_lon:
                  type: number
                location_lat:
                  type: number
                rating:
                  type: number
                comment:
                  type: string
                  description: 3 emojis
      responses:
        "200":
          description: OK, comment posted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: The posted comment's id in relation to the post id
        "409":
          description: You've already posted a comment
        "404":
          description: Post not found
    put:
      tags:
        - Comments
      summary: Update a comment
      parameters:
        - name: id
          in: query
          description: Post id
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: The comment id (of the edited comment)
                rating:
                  type: number
                comment:
                  type: string
                  description: 3 emojis
      responses:
        "200":
          description: OK, comment posted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: The posted comment's id in relation to the post id
        "401":
          description: Not your comment / not an admin
        "404":
          description: Post / comment not found
    delete:
      tags:
        - Comments
      summary: Delete a comment
      parameters:
        - name: id
          in: query
          description: Post id
          schema:
            type: number
        - name: comment_id
          in: query
          description: comment id
          schema:
            type: number
      responses:
        "200":
          description: Comment deleted
        "401":
          description: Not your comment / not an admin
        "404":
          description: Post / comment not found
  "/login":
    post:
      tags:
        - Authorisation
      summary: Log in with credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiry:
                    type: number
                    description: Token expiration timestamp (UNIX seconds)
        "403":
          description: Wrong password or username
  "/register":
    post:
      tags:
        - Authorisation
      summary: Register new account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                team:
                  type: number
                  description: the user's chosen team's id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  token:
                    type: string
                  expiry:
                    type: number
                    description: Token expiration timestamp (UNIX seconds)
        "429":
          description: Too Many Requests
  "/teams":
    get:
      tags:
        - Teams
      summary: Get the available Teams and their styling
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                    color:
                      type: string
                      description: Standard hex color format
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Post:
      type: object
      properties:
        id:
          type: number
        author:
          type: string
        image_url:
          description: The url where the post's image is accessible
          type: string
        location_lat:
          type: number
        location_lon:
          type: number
    Comment:
      type: object
      properties:
        id:
          type: number
          description: The comment's id (0 = post author's comment)
        author:
          type: string
          description: The author's username
        comment:
          type: string
          description: The comment's 3 emojis
        distance:
          type: number
          description: The comment's distance from the post in meters
        rating:
          type: number
          description: The comment's rating from 1-5 stars
        removed:
          type: boolean
          description: Whether the comment is marked as removed
    Team:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        color:
          type: string
          description: Standard hex color format
